{
    "name": "Integer Error",
    "variant": "CS1 C++",
    "grant": "The Security Injections@Towson, SPLASH@Towson, and Cyber4All projects are supported by the National Science Foundation under grants NSF DUE-1241738, NSF DUE -0817267, NSF DGE-1516113, NSF DGE-1516113, NSF DGE-1241649, the GenCyber program, and the Intel Corporation.",
	"license": {
		"name": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License",
		"link": "http://creativecommons.org/licenses/by-nc-sa/3.0/"
	},
    "sections": [
        {
            "header": "Background",
            "units": [
                {
                    "type": "subheader",
                    "text": "Summary:"
                },
                {
                    "type": "paragraph",
                    "text": "Integer values that are too large or small may exceed the range of their data type, which can cause unpredictable behavior. This can reduce the robustness of your code and invite security vulnerabilities."
                },
                {
                    "type": "image",
                    "src": "http://imgs.xkcd.com/comics/cant_sleep.png",
                    "alt": "*XKCD Comic*",
                    "width": 740,
                    "height": 244,
                    "float": null
                },
                {
                    "type": "attribution",
                    "copyright": "XKCD",
                    "date": "2017",
                    "link": "http://imgs.xkcd.com/comics/cant_sleep.png"
                },
                {
                    "type": "subheader",
                    "text": "Description:"
                },
                {
                    "type": "paragraph",
                    "text": "Declaring a variable as type <code>int</code> allocates a fixed amount of space in memory. Most languages include several integer types, including <code>short</code>, <code>int</code>, <code>long</code>, etc., to allow for various storage capacities. The amount of space allocated limits the range of values that can be stored. For example, a 32-bit signed <code>int</code> variable can hold values from -2<sup>31</sup> (-2,147,413,648 bits) through 2<sup>31</sup>-1 (2,147,413,647 bits)."
                },
                {
                    "type": "paragraph",
                    "text": "Invalid input and mathematical operations such as addition, subtraction, and multiplication may give out of range values. This results in an integer error or overflow, a common cause of software errors and vulnerabilities."
                },
                {
                    "type": "subheader",
                    "text": "Risk – How Can It Happen?"
                },
                {
                    "type": "paragraph",
                    "text": "An integer error can cause unexpected behavior or it can be exploited to cause a program crash, corrupt data, or allow the execution of malicious software."
                },
                {
                    "type": "subheader",
                    "text": "Examples of Occurence:"
                },
                {
                    "type": "image",
                    "src": "http://4.bp.blogspot.com/-58kvuzDhzus/TWgnjsyE-7I/AAAAAAAAAG4/0HijRxwS8Ew/s1600/group+reaches+s.png",
                    "alt": "*Facebook group image*",
                    "width": 230,
                    "height": 175,
                    "float": null
                },
                {
                    "type": "attribution",
                    "copyright": "Facebook",
                    "date": "2017",
                    "link": "http://4.bp.blogspot.com/-58kvuzDhzus/TWgnjsyE-7I/AAAAAAAAAG4/0HijRxwS8Ew/s1600/group+reaches+s.png"
                },
                {
                    "type": "list",
                    "items": [
                        "There is a Facebook group called 'If this group reaches 4,294,967,296 it might cause an integer overflow.' This value is 1 more than the largest number that can fit in a 32-bit unsigned integer. If the number of members of the group exceeded this number, it might cause an overflow. Whether it will cause an overflow or not depends upon how Facebook is implemented and which language is used – they might use data types that can hold larger numbers. In any case, the chances of an overflow seem remote, as roughly 2/3 of the people on Earth would be required to reach the goal of more than 4 billion members.",
                        "On December 25, 2004, Comair airlines was forced to ground 1,100 flights after its flight crew scheduling software crashed. The software used a 16-bit integer (max 32,767) to store the number of crew changes. The bad weather that month lead to a spike in crew changes, which caused an integer overflow.",
                        "Many Unix operating systems store their time values in 32-bit signed (positive or negative) integers, counting the number of seconds since midnight on January 1, 1970. On Tuesday, January 19, 2038, this value will overflow, becoming a negative number. Although the impact of this problem in 2038 is not yet known, there are concerns that some software projects – including tools for mortgage payment and retirement fund distribution – might face problems long before then."
                    ],
                    "ordered": true
                },
                {
                    "type": "paragraph",
                    "text": "<small><small><small>Source: Year 2038 Problem <a href = http://en.wikipedia.org/wiki/Year_2038_problem> http://en.wikipedia.org/wiki/Year_2038_problem</a>.</small></small></small>"
                },
                {
                    "type": "question",
                    "id": "memory",
                    "prompt": "Declaring a variable as type integer:",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "infinite",
                            "text": "Allocates an infinite amount of storage"
                        },
                        {
                            "id": "fixed",
                            "text": "Allocates a fixed amount of storage"
                        }
                    ],
                    "answer": "fixed"
                },
                {
                    "type": "question",
                    "id": "effect",
                    "prompt": "An integer error in C++ or Java causes:",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "syntax",
                            "text": "A syntax error"
                        },
                        {
                            "id": "correction",
                            "text": "The program to correct itself"
                        },
                        {
                            "id": "unexpected",
                            "text": "Unexpected behavior"
                        }
                    ],
                    "answer": "unexpected"
                }
            ]
        },
        {
            "header": "Code Responsibly",
            "units": [
                {
                    "type": "subheader",
                    "text": "How Can I Avoid an Integer Error?"
                },
                {
                    "type": "list",
                    "items": [
                        "<em>Know your limits:</em> Familiarize yourself with the range of each data type. With languages like C and C++, the sizes of the data types are machine and compiler dependent.",
                        "<em>Choose your data types wisely:</em> Many programming languages contain a variety of data types that can store integer values. If you are concerned about the integer values you will be using, learn about the options available in the language you are using, and choose integer types large enough to hold those values.",
                        "<em>Validate your input:</em> Check your input for range and reasonableness before conducting operations (more on this later)."
                    ],
                    "ordered": true
                },
                {
                    "type": "question",
                    "id": "avoid",
                    "prompt": "How can you avoid integer error in your program?",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "bounds",
                            "text": "Know the smallest and largest possible values for each data type in your chosen programming language.",
                            "ans": true
                        },
                        {
                            "id": "float",
                            "text": "Always pick float or double as the data types for numbers.",
                            "ans": false
                        },
                        {
                            "id": "check",
                            "text": "Check your input for reasonable values before conducting mathematical operations.",
                            "ans": true
                        }
                    ]
                }
            ]
        },
        {
            "header": "Laboratory Assignment",
            "units": [
                {
                    "type": "paragraph",
                    "text": "<strong>STEP 1:</strong> Type Program 1 into your editor. Compile and run."
                },
                {
                    "type": "subheader",
                    "text": "Program 1"
                },
                {
                    "type": "codeblock",
                    "code": "./program1.cpp"
                },
                {
                    "type": "question",
                    "id": "largestInt",
                    "prompt": "Look at the output. What is the largest possible <code>int</code> value?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "1",
                            "text": "1,000,000"
                        },
                        {
                            "id": "2",
                            "text": "2,147,483,647"
                        },
                        {
                            "id": "3",
                            "text": "2,000,000,000"
                        },
                        {
                            "id": "4",
                            "text": "32,767"
                        }
                    ],
                    "answer": "2"
                },
                {
                    "type": "question",
                    "id": "largestShort",
                    "prompt": "Look at the output. What is the largest possible <code>short</code> integer value?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "1",
                            "text": "54,767"
                        },
                        {
                            "id": "2",
                            "text": "2,147,483,647"
                        },
                        {
                            "id": "3",
                            "text": "32,000"
                        },
                        {
                            "id": "4",
                            "text": "32,767"
                        }
                    ],
                    "answer": "4"
                },
                {
                    "type": "paragraph",
                    "text": "<strong>STEP 2:</strong> Type the lines below into Program 1 (before 'return 0;')."
                },
                {
                    "type": "codeblock",
                    "code": "./program1step2.cpp"
                },
                {
                    "type": "paragraph",
                    "text": "<strong>STEP 2.1:</strong> Compile and run the program from Step 2. Enter the values requested by the prompt. For example, enter the smallest positive value for the <code>short</code> that leads to an error."
                },
                {
                    "type": "paragraph",
                    "text": "<strong>STEP 3:</strong> Add the following lines to the end of the program (before 'return 0;') formed in Step 2."
                },
                {
                    "type": "codeblock",
                    "code": "./program1step3.cpp"
                },
                {
                    "type": "paragraph",
                    "text": "<strong>STEP 4:</strong> Compile and run the program formed in Step 3."
                },
                {
                    "type": "question",
                    "id": "enter400",
                    "prompt": "What happens when you enter 400 for <code>short</code>?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "1",
                            "text": "Unexpected result"
                        },
                        {
                            "id": "2",
                            "text": "Integer overflow occurs"
                        },
                        {
                            "id": "3",
                            "text": "Program crashes"
                        },
                        {
                            "id": "4",
                            "text": "Prints 4000"
                        }
                    ],
                    "answer": "4"
                },
                {
                    "type": "question",
                    "id": "enter3277",
                    "prompt": "What happens when you enter 3277 for <code>short</code>?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "1",
                            "text": "Prints 32,770"
                        },
                        {
                            "id": "2",
                            "text": "Integer overflow occurs"
                        },
                        {
                            "id": "3",
                            "text": "The program crashes"
                        }
                    ],
                    "answer": "2"
                }
            ]
        },
        {
            "header": "Security Checklist",
            "units": [
                {
                    "type": "checklist",
                    "id": "Pgm1CL",
                    "list": [
                        {
                            "id": "var",
                            "header": "Check each line of code:",
                            "items": [
                                {
                                    "id": "var",
                                    "text": "Click each declaration of an integer variable.",
                                    "ans": true,
                                    "js": true
                                }
                            ]
                        },
                        {
                            "id": "vuln",
                            "header": "For each variable:",
                            "items": [
                                {
                                    "id": "input",
                                    "text": "Click all input operations that assign values to the variable.",
                                    "ans": true,
                                    "js": true
                                },
                                {
                                    "id": "math",
                                    "text": "Click all mathematical operations involving the variable.",
                                    "ans": true,
                                    "js": true
                                },
                                {
                                    "id": "assign",
                                    "text": "Click all assignments made to the variable.",
                                    "ans": true,
                                    "js": true
                                }
                            ]
                        }
                    ],
                    "code": "./securityChecklist.html",
                    "javascript": "./checklist.js"
                },
                {
                    "type": "paragraph",
                    "text": "Highlighted areas indicate vulnerabilities."
                }
            ]
        },
        {
            "header": "Discussion Questions",
            "units": [
                {
                    "type": "question",
                    "id": "discussionqQestion1",
                    "prompt": "In your own words, describe an integer error.",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                },
                {
                    "type": "question",
                    "id": "DiscussionQuestion2",
                    "prompt": "How could an integer overflow error occur in your program?",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                },
                {
                    "type": "question",
                    "id": "DiscussionQuestion3",
                    "prompt": "What happens when an integer error occurs?",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                },
                {
                    "type": "question",
                    "id": "DiscussionQuestion4",
                    "prompt": "Why is multiplication especially risky?",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                },
                {
                    "type": "question",
                    "id": "DiscussionQuestion5",
                    "prompt": "Overflow can also occur when the dividend is equal to the minimum (negative) value for the signed integer type and the divisor equals -1. Demonstrate this problem adding the following line to the end of the program from Security Checklist:<br><br><code>cout << \"INTEGER OVERFLOW: i = \" << INT_MIN/-1 << endl;</code>",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                },
                {
                    "type": "subheader",
                    "text": "For each of the following, give the appropriate C++ declaration:"
                },
                {
                    "type": "question",
                    "id": "numStudents",
                    "prompt": "Number of students at your college",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": null
                },
                {
                    "type": "question",
                    "id": "popBaltimore",
                    "prompt": "Population of Baltimore (637,455)",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": null
                },
                {
                    "type": "question",
                    "id": "popMaryland",
                    "prompt": "Population of Maryland (5.6 million)",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": null
                },
                {
                    "type": "question",
                    "id": "popWorld",
                    "prompt": "The world population (6.6 billion)",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": null
                },
                {
                    "type": "question",
                    "id": "threeThings",
                    "prompt": "Name three things you might do in your next program to prevent an integer error from occurring.",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                }
            ]
        }
    ]
}
