{
    "name": "Input Validation",
    "variant": "CS0 Java",
    "grant": "The Security Injections@Towson, SPLASH@Towson, and Cyber4All projects are supported by the National Science Foundation under grants NSF DUE-1241738, NSF DUE -0817267, NSF DGE-1516113, NSF DGE-1516113, NSF DGE-1241649, the GenCyber program, and the Intel Corporation.",
	"license": {
		"name": "Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License",
		"link": "http://creativecommons.org/licenses/by-nc-sa/3.0/"
	},
    "sections": [
        {
            "header": "Background",
            "units": [
                {
                    "type": "subheader",
                    "text": "Summary:"
                },
                {
                    "type": "paragraph",
                    "text": "Any program input — a user typing on a keyboard, a file or network connection — can invite security vulnerabilities and disastrous bugs. All input should be treated as potential danger."
                },
                {
                    "type": "subheader",
                    "text": "Description:"
                },
                {
                    "type": "paragraph",
                    "text": "Determined attackers can use carefully crafted input to make your program execute unauthorized commands. This threat can delete or damage your data, propagate worms or malware on your machine, or obtain your sensitive information."
                },
                {
                    "type": "paragraph",
                    "text": "If the video does not work, try refreshing the page:"
                },
                {
                    "type": "video",
                    "url": "https://www.youtube.com/embed/-8bDdrZhj_k"
                },
                {
                    "type": "paragraph",
                    "text": "<small><small>Video by Summer Lagambi, Haley McComas, and Abbey Baker.</small></small>"
                },
                {
                    "type": "subheader",
                    "text": "Risk - How Can It Happen?"
                },
                {
                    "type": "paragraph",
                    "text": "All program inputs are a potential source of problems. If external data is not validated to ensure that it contains the right type of information, the right amount of information, and the right structure of information, it can cause problems."
                },
                {
                    "type": "image",
                    "src": "https://s3.amazonaws.com/security-injections.clark.center/assets/Input_Validation-CS0_C%2B%2B/fat_finger.jpeg",
                    "alt": "Dominik Joswig",
                    "width": 406,
                    "height": 226,
                    "float": null
                },
                {
                    "type": "paragraph",
                    "text": "<small><small>Drawing used by permission of Dominik Joswig</small></small>"
                },
                {
                    "type": "subheader",
                    "text": "Examples of Occurence:"
                },
                {
                    "type": "list",
                    "items": [
                        "In December 2005, a Japanese securities trader made a financially catastrophic typing error when he mistakenly sold 610,000 shares of stock at 1 yen each instead of selling one share for 610,000 yen. A few lines of code may have averted this error. Fat fingered typing cost his supervisors 27 billion yen ($142 million).  <br><small><small><small><i>The Guardian</i>, December 09, 2005</small></small></small>",
                        "Web applications are highly vulnerable to input validation errors. Making the invalid input \"!@#$%^&*()\" on a vulnerable e-commerce site may cause performance issues or denial of service. Entering invalid passwords like \"pwd’\" or \"1=1— \" on a vulnerable system may result in unauthorized access.",
                        "A Norwegian woman mistyped her account number on an internet banking system. Instead of typing her 11-digit account number, she accidentally typed an extra digit for a total of 12 numbers. The system discarded the extra digit and transferred $100,000 to the wrong account. A simple dialog box alerting her that she had typed too many digits would have helped avoid this expensive error.<br><small><small><small>Olsen, Kai. “The $100,000 Keying error” IEEE Computer, August 2008</small></small></small>"
                    ],
                    "ordered": false
                },
                {
                    "type": "subheader",
                    "text": "Example in Code:"
                },
                {
                    "type": "codeblock",
                    "code": "./examplesInCode.java"
                },
                {
                    "type": "paragraph",
                    "text": "<small>This code fails to check for negative test scores or for test scores above 100.</small>"
                },
                {
                    "type": "subheader",
                    "text": "Answer the following questions:"
                },
                {
                    "type": "question",
                    "id": "inputPrograms",
                    "prompt": "The following are sources of input for programs:",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "Keyboard",
                            "text": "Keyboard",
                            "ans": true
                        },
                        {
                            "id": "Network",
                            "text": "Network",
                            "ans": true
                        },
                        {
                            "id": "File",
                            "text": "File",
                            "ans": true
                        }
                    ]
                },
                {
                    "type": "question",
                    "id": "evilInput",
                    "prompt": "\"Evil\" input can occur from an error made by the user:",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "true",
                            "text": "True"
                        },
                        {
                            "id": "false",
                            "text": "False"
                        }
                    ],
                    "answer": "true"
                }
            ]
        },
        {
            "header": "Code Responsibly",
            "units": [
                {
                    "type": "paragraph",
                    "text": "<strong><i>Check all input:</i></strong> Below is a partial list of some checks to include:"
                },
                {
                    "type": "list",
                    "items": [
                        "<strong>Type check:</strong> variables are the appropriate data type; for example, names should be alphabetic and age should be numeric.",
                        "<strong>Length check:</strong> variables are the appropriate length, for example, a US telephone number has 10 digits.",
                        "<strong>Range check:</strong> numbers are within a range of possible values; for example, the value for month should lie between 1 and 12.",
                        "<strong>Reasonable check:</strong> values are reasonable; for example: (age > 16) && (age < 100)",
                        "<strong>Arithmetic check:</strong> variables are checked for values that might cause problems such as division by zero.",
                        "<strong>Format check:</strong> data are in a specified format or template; for example, dates must be in the format DD/MM/YYYY."
                    ],
                    "ordered": false
                },
                {
                    "type": "paragraph",
                    "text": "<small>The following function shows input validation to check range and/or reasonableness:</small>"
                },
                {
                    "type": "codeblock",
                    "code": "./codeResponsibly.java"
                },
                {
                    "type": "paragraph",
                    "text": "<strong><i>Recover appropriately:</i></strong> A robust program will respond to invalid input in a manner that is appropriate, correct, and secure. When your program runs across invalid input, it should recover as much as possible, and then repeat the request, or otherwise continue on. Arbitrary decisions such as truncating or otherwise reformatting data to \"make it fit\" should be avoided."
                },
                {
                    "type": "subheader",
                    "text": "Answer the following questions:"
                },
                {
                    "type": "question",
                    "id": "checkedForReasonableness",
                    "prompt": "Which of the following inputs should be checked for reasonableness?",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "age",
                            "text": "Age",
                            "ans": true
                        },
                        {
                            "id": "firstName",
                            "text": "First name",
                            "ans": false
                        },
                        {
                            "id": "city",
                            "text": "City",
                            "ans": false
                        },
                        {
                            "id": "itemPrice",
                            "text": "Item price",
                            "ans": true
                        }
                    ]
                },
                {
                    "type": "question",
                    "id": "template",
                    "prompt": "Which of the following inputs would require a specific template or format to be appropriate?",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "ssn",
                            "text": "Social security number",
                            "ans": true
                        },
                        {
                            "id": "nationalDebt",
                            "text": "National debt",
                            "ans": false
                        },
                        {
                            "id": "telephoneNumber",
                            "text": "Telephone number",
                            "ans": true
                        },
                        {
                            "id": "bd",
                            "text": "Birth date",
                            "ans": true
                        }
                    ]
                }
            ]
        },
        {
            "header": "Laboratory Assignment",
            "units": [
                {
                    "type": "paragraph",
                    "text": "<strong>Which type of input validation (length, range, format, or type) applies to each of the following:</strong>"
                },
                {
                    "type": "question",
                    "id": "phoneNumber",
                    "prompt": "1. Phone number",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "length",
                            "text": "Length",
                            "ans": true
                        },
                        {
                            "id": "rr",
                            "text": "Range or Reasonableness",
                            "ans": false
                        },
                        {
                            "id": "format",
                            "text": "Format",
                            "ans": true
                        },
                        {
                            "id": "type",
                            "text": "Type",
                            "ans": true
                        }
                    ]
                },
                {
                    "type": "question",
                    "id": "age",
                    "prompt": "2. Age",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "length",
                            "text": "Length",
                            "ans": false
                        },
                        {
                            "id": "rr",
                            "text": "Range or Reasonableness",
                            "ans": true
                        },
                        {
                            "id": "format",
                            "text": "Format",
                            "ans": false
                        },
                        {
                            "id": "type",
                            "text": "Type",
                            "ans": true
                        }
                    ]
                },
                {
                    "type": "question",
                    "id": "ccNum",
                    "prompt": "3. Credit card number",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "length",
                            "text": "Length",
                            "ans": true
                        },
                        {
                            "id": "rr",
                            "text": "Range or Reasonableness",
                            "ans": false
                        },
                        {
                            "id": "format",
                            "text": "Format",
                            "ans": true
                        },
                        {
                            "id": "type",
                            "text": "Type",
                            "ans": true
                        }
                    ]
                },
                {
                    "type": "question",
                    "id": "name",
                    "prompt": "4. Name",
                    "ignored": false,
                    "mode": "checkbox",
                    "choices": [
                        {
                            "id": "length",
                            "text": "Length",
                            "ans": false
                        },
                        {
                            "id": "rr",
                            "text": "Range or Reasonableness",
                            "ans": false
                        },
                        {
                            "id": "format",
                            "text": "Format",
                            "ans": false
                        },
                        {
                            "id": "type",
                            "text": "Type",
                            "ans": true
                        }
                    ]
                },
                {
                    "type": "question",
                    "id": "challenging",
                    "prompt": "Which of the following would be the most challenging to properly validate?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "1",
                            "text": "Phone"
                        },
                        {
                            "id": "2",
                            "text": "Age"
                        },
                        {
                            "id": "3",
                            "text": "Credit card number"
                        },
                        {
                            "id": "4",
                            "text": "Name"
                        }
                    ],
                    "answer": "4"
                },
                {
                    "type": "paragraph",
                    "text": "<strong>STEP 1:</strong> Type (do not copy and paste) the example code from the Background section into an editor. Compile and run."
                },
                {
                    "type": "question",
                    "id": "score250",
                    "prompt": "What does the program display when you enter a test score of 250 ?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "a",
                            "text": "\"Your grade is A\""
                        },
                        {
                            "id": "b",
                            "text": "\"Your grade is B\""
                        },
                        {
                            "id": "c",
                            "text": "\"Your grade is C\""
                        }
                    ],
                    "answer": "a"
                },
                {
                    "type": "question",
                    "id": "display",
                    "prompt": "What does the program display when you enter a test score of -5 ?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "e",
                            "text": "\"Your grade is E\""
                        },
                        {
                            "id": "error",
                            "text": "\"Error\""
                        },
                        {
                            "id": "f",
                            "text": "\"Your grade is F\""
                        }
                    ],
                    "answer": "f"
                },
                {
                    "type": "question",
                    "id": "shouldDisplay",
                    "prompt": "What <i>should</i> the program display when you enter a test score of -5 ?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "a",
                            "text": "\"Your grade is A\""
                        },
                        {
                            "id": "invalid",
                            "text": "\"Your score is invalid\""
                        },
                        {
                            "id": "e",
                            "text": "\"Your grade is E\""
                        }
                    ],
                    "answer": "invalid"
                },
                {
                    "type": "paragraph",
                    "text": "<strong>STEP 2:</strong> Type Program 1 into an editor. Compile and run."
                },
                {
                    "type": "paragraph",
                    "text": "<small><strong>Program 1</strong></small>"
                },
                {
                    "type": "codeblock",
                    "code": "./labAssignment.java"
                },
                {
                    "type": "question",
                    "id": "integerOverflow",
                    "prompt": "Could integer overflow occur for the variable total? (Refer to the Integer Error lab if necessary)",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "y",
                            "text": "Yes"
                        },
                        {
                            "id": "n",
                            "text": "No"
                        }
                    ],
                    "answer": "y"
                }
            ]
        },
        {
            "header": "Security Checklist",
            "units": [
              {
      					"type": "checklist",
      					"id": "Pgm1CL",
      					"list": [
      						{
      							"id": "var",
      							"header": "Check each line of code:",
      							"items": [
      								{
      									"id": "input",
      									"text": "Click the variable that is input",
      									"ans": true,
      									"js": true
      								}
      							]
      						},
      						{
      							"id": "vuln",
      							"header": "For the variable, which of the following is applicable:",
      							"items": [
      								{
      									"id": "length",
      									"text": "Check length?",
      									"ans": false,
      									"js": false
      								},
      								{
      									"id": "range",
      									"text": "Check range? (reasonableness)",
      									"ans": true,
      									"js": false
      								},
      								{
      									"id": "format",
      									"text": "Check format?",
      									"ans": false,
      									"js": false
      								},
                      {
      									"id": "type",
      									"text": "Check type?",
      									"ans": true,
      									"js": false
      								}
      							]
      						}
      					],
      					"code": "./securityChecklist.html",
      					"javascript": "./checklist.js"
      				},
      				{
      					"type": "paragraph",
      					"text": "Highlighted areas indicate vulnerabilities."
      				},
              {
                  "type": "subheader",
                  "text": "Answer the following questions:"
              },
                {
                    "type": "question",
                    "id": "whichVariable",
                    "prompt": "Which variable should be validated and what should you check for?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "1",
                            "text": "The age variable should be validated. We should check for range of age < 0 && age > 150, otherwise code should display a validation message like “invalid age”."
                        },
                        {
                            "id": "2",
                            "text": "The total variable should be validated. We should check for range of total >= 0 && total <= 150 otherwise code should display a validation message like “invalid total”."
                        },
                        {
                            "id": "3",
                            "text": "The age variable should be validated. We should check for range of age >= 0 && age <= 150 otherwise code should display a validation message like “invalid age”."
                        }
                    ],
                    "answer": "3"
                },
                {
                    "type": "question",
                    "id": "integerOverflow",
                    "prompt": "Could integer overflow occur for the variable total?",
                    "ignored": false,
                    "mode": "radio",
                    "choices": [
                        {
                            "id": "yes",
                            "text": "Yes integer overflow can occur for variable total. Since the variable total is a running total of age, if extremely large values of age are entered, their sum can overflow total."
                        },
                        {
                            "id": "no1",
                            "text": "No, the total variable has an integer limit."
                        },
                        {
                            "id": "no2",
                            "text": "No."
                        }
                    ],
                    "answer": "yes"
                }
            ]
        },
        {
            "header": "Discussion Questions",
            "units": [
                {
                    "type": "paragraph",
                    "text": "<strong>Further Work (optional - check with your instructor if you need to answer the following questions)</strong>"
                },
                {
                    "type": "question",
                    "id": "question1challenges",
                    "prompt": "What are the challenges of adding input validation to your program?",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                },
                {
                    "type": "question",
                    "id": "question2challenges",
                    "prompt": "Describe some input validation that you have encountered when using software such as registering for courses, checking your account balance, using a game, ordering an item online. Have you ever encountered a problem with the validation?",
                    "ignored": true,
                    "mode": "textarea",
                    "pattern": "null"
                }
            ]
        }
    ]
}
